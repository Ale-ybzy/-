1. 软件生命周期
a. 程序设计语言通常分为机器语言、汇编语言和高级语言3类；机器语言每条指令都对应一串二进制代码，它是计算机唯一能够识别并直接执行的语言，可移植性差；汇编语言又叫做符号语言，它是符号化了的机器语言，执行时首先要进行汇编过程将程序翻译成机器语言；高级语言翻译程序有“解释”和“编译”两种方法，二者的最大区别是是否生成目标代码，编译方式执行速度快，解释方式交互好。
b. 软件的生命周期是指计划、分析、设计、编程、测试、维护直至淘汰的整个过程。
c. 计划时期主要考虑用户功能、时间、成本、资源等宏观的问题，对项目的开发实施做整体的计划分析。
d. 需求阶段确定系统的功能、性能、数据以及界面等要求。
e. 总体设计也叫概要设计阶段主要明确软件有哪些模块组成，模块的层次结构以及之间的调用关系，要求尽量做到高内聚低耦合。
f. 详细设计阶段确定每个模块之前的控制接口，先后顺序以及使用工具将控制结构表示出来。

2. 软件开发模型
a. 主要的开发模型有瀑布模型、V模型、喷泉模型、增量模型、螺旋模型等。
b. 瀑布模型：本质是一次性通过，适用于大型软件开发，用户前期无法看到软件的效果，且前期未发现的错误传到后面容易引起扩散。
c. 演化模型是先开发系统的一个核心功能，然后跟客户逐步确认迭代，该方式很难确认整个系统的里程碑、成本和时间基线。
d. 增量模型本质也是迭代，强调每一次增量都有一个可操作的产品，人员分配灵活。
e. 喷泉模型强调无间隙，但各个开发阶段存在重叠现象，需要大量的开发人员，难以进行项目管理。
f. V模型是以测试为中心的开发模型。
g. 螺旋模型将瀑布模型和烟花模型相结合，综合了两者的优点并增加了风险分析。

3. 软件开发方法论

4. 软件测试
a. 动态测试：黑盒测试法、白盒测试法和灰盒测试法。黑盒测试法要求测试人员不考虑程序的内部结构和处理过程，直在软件的接口处进行测试；白盒测试法要求测试人员了解程序的内部结构和处理过程；灰盒测试法关注输出对于输入的正确性，同时也关注内部内部表现。
b. 静态测试方法有桌前检查（程序员自查）、代码审查和代码走查。
c. 根据测试的目的阶段不同可把测试分为单元测试、集成测试、确认测试和系统测试等。
d. 回归测试又称为退化测试是检查修改后的功能是否对其他功能造成影响。

5. 项目管理
a. 项目管理是对人员、成品、过程和项目进行分析和管理的活动。
b. 进度管理方法有甘特图（Gantt）和计划评审图法（PERT）。
c. 甘特图法优点是在于表明了各任务的计划进度和当前进度，能动态地反映项目进展；缺点是难以反映多个任务之间存在的复杂逻辑关系。
d. 计划评审图法可以明确的表达任务之间的依赖关系但是不能清晰的描述各个任务之间的并行关系；
（1）关键路径：开始顶点到结束顶点的最长路径；
（2）松弛时间：关键路径时间 - 包含该某活动最长路径所需的时间；

6. 知识产权保护期限
a. 著作权法：自作品完成创作之日起即拥有著作权，法律对它的保护有一定的期限，署名权和修改权没有期限，但是发表权、使用权和获得报酬权保护时间为生前及死后的50年。
b. 作者不明的情况，作品原件所有人可以行使除署名权以外的著作权知道作者身份明确。
c. 商标权是指商标主管机关依法授予商标所有人对其注册商标受国家法律保护的专有权，有效期10年，期满未办理续展手续的注销其商标。

7. 产权人的确定
a. 谁先申请谁拥有。
b. 对同一个发明只能授予一个专利权。

8. 侵权判定

9. 标准的分类
